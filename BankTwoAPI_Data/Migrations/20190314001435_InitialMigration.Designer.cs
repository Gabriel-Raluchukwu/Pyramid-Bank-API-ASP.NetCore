// <auto-generated />
using System;
using BankTwoAPI_Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankTwoAPI_Data.Migrations
{
    [DbContext(typeof(BankTwoDatabase))]
    [Migration("20190314001435_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BankTwoAPI_Entities.Models.AccountCustomerCategory", b =>
                {
                    b.Property<int>("CustomerAccountId");

                    b.Property<int>("CustomerId");

                    b.HasKey("CustomerAccountId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AccountCustomerCategories");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.AirTimeTopUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CustomerAccountId");

                    b.Property<string>("CustomerAccountNumber");

                    b.Property<bool>("IsActive");

                    b.Property<int>("MobileNetworksId");

                    b.Property<string>("MobileNumber");

                    b.HasKey("Id");

                    b.HasIndex("CustomerAccountId");

                    b.HasIndex("MobileNetworksId");

                    b.ToTable("AirTimeTopUp");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.Banks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankFullName");

                    b.Property<int>("BankIdentificationCode");

                    b.Property<string>("BankShortName");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.CardRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CardType");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CustomerAccountId");

                    b.Property<string>("CustomerAccountNumber");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.HasKey("Id");

                    b.HasIndex("CustomerAccountId");

                    b.ToTable("CardRequests");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CustomerAccountNumber");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PasswordSalt");

                    b.Property<string>("UserName");

                    b.Property<int>("VerificationCode");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.CustomerAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AccountBalance");

                    b.Property<int>("AccountType");

                    b.Property<string>("BVNNumber");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CustomerAccountNumber");

                    b.Property<int>("CustomerPassportId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<string>("OtherNames");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Surname");

                    b.Property<int>("TransactionPin");

                    b.HasKey("Id");

                    b.HasIndex("CustomerPassportId");

                    b.ToTable("CustomerAccounts");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.CustomerBeneficiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CustomerAccountNumber");

                    b.Property<int>("CustomerId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<string>("NickName");

                    b.Property<int>("OTPCode");

                    b.Property<string>("RecipientAccountName");

                    b.Property<string>("RecipientAccountNumber");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerBeneficiaries");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.CustomerPassport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("Height");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<int>("Length");

                    b.Property<string>("Name");

                    b.Property<byte[]>("Passport");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("CustomerPassports");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.InterBankTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BanksId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CustomerAccountId");

                    b.Property<string>("CustomerAccountNumber");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("RecipientAccountName");

                    b.Property<string>("RecipientAccountNumber");

                    b.Property<decimal>("TransferAmount");

                    b.HasKey("Id");

                    b.HasIndex("BanksId");

                    b.HasIndex("CustomerAccountId");

                    b.ToTable("InterBankTransfers");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.IntraBankTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CustomerAccountId");

                    b.Property<string>("CustomerAccountNumber");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("RecipientAccountName");

                    b.Property<string>("RecipientAccountNumber");

                    b.Property<decimal>("TransferAmount");

                    b.HasKey("Id");

                    b.HasIndex("CustomerAccountId");

                    b.ToTable("IntraBankTransfers");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.MobileNetworks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<string>("MobileNetworkName");

                    b.Property<int>("NetworkProviderRegistratonCode");

                    b.HasKey("Id");

                    b.ToTable("MobileNetworks");
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.AccountCustomerCategory", b =>
                {
                    b.HasOne("BankTwoAPI_Entities.Models.CustomerAccount", "CustomerAccount")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BankTwoAPI_Entities.Models.Customer", "Customer")
                        .WithMany("CustomerAccounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.AirTimeTopUp", b =>
                {
                    b.HasOne("BankTwoAPI_Entities.Models.CustomerAccount", "CustomerAccount")
                        .WithMany()
                        .HasForeignKey("CustomerAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BankTwoAPI_Entities.Models.MobileNetworks", "MobileNetworks")
                        .WithMany()
                        .HasForeignKey("MobileNetworksId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.CardRequest", b =>
                {
                    b.HasOne("BankTwoAPI_Entities.Models.CustomerAccount", "CustomerAccount")
                        .WithMany()
                        .HasForeignKey("CustomerAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.CustomerAccount", b =>
                {
                    b.HasOne("BankTwoAPI_Entities.Models.CustomerPassport", "CustomerPassport")
                        .WithMany()
                        .HasForeignKey("CustomerPassportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.CustomerBeneficiary", b =>
                {
                    b.HasOne("BankTwoAPI_Entities.Models.Banks", "Banks")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BankTwoAPI_Entities.Models.CustomerAccount", "CustomerAccount")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.InterBankTransfer", b =>
                {
                    b.HasOne("BankTwoAPI_Entities.Models.Banks", "Banks")
                        .WithMany()
                        .HasForeignKey("BanksId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BankTwoAPI_Entities.Models.CustomerAccount", "CustomerAccount")
                        .WithMany()
                        .HasForeignKey("CustomerAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BankTwoAPI_Entities.Models.IntraBankTransfer", b =>
                {
                    b.HasOne("BankTwoAPI_Entities.Models.CustomerAccount", "CustomerAccount")
                        .WithMany()
                        .HasForeignKey("CustomerAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
